basePath: /api
definitions:
  model.APIError:
    properties:
      error_code:
        type: integer
      error_message:
        type: string
    type: object
  model.Item:
    properties:
      description:
        type: string
      item_code:
        type: string
      item_id:
        type: integer
      order_id:
        type: integer
      quantity:
        type: integer
    type: object
  model.OrderCreateRequest:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      order_at:
        type: string
    type: object
  model.OrderResponse:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      order_at:
        type: string
      order_id:
        type: integer
    type: object
  model.OrderUpdateRequest:
    properties:
      customer_name:
        type: string
      items:
        items:
          $ref: '#/definitions/model.Item'
        type: array
      order_at:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: roihansori12@gmail.com
    name: API Support
  description: This is a service for managing orders
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms
  title: Orders API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get all details orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OrderResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get all orders
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create new order
      parameters:
      - description: request is required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Create new order
      tags:
      - Order
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete order by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Order deleted succcessfully
          schema:
            type: string
        "400":
          description: We need ID!!
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Can not find ID
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Delete order by id
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get details order by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderResponse'
        "400":
          description: We need ID!!
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Can not find ID
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Get one order by id
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update new order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: request is required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.OrderUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.APIError'
      summary: Update order
      tags:
      - Order
swagger: "2.0"
